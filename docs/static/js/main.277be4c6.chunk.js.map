{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,sBAAMC,SAZS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAI5BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKd,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,QCHlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXN,EADW,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEXS,EAFW,gBAGEA,EAAKC,OAHP,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIC,cAAL,aAAC,EAAYC,iBAAiBhB,QARxB,kBAWVY,GAXU,4CAAD,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDb,SAACA,GAAY,IAAD,EACRrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAQ,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAiBlC,OAPAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GAAI,OAAEH,EAAS,CACjBT,KAAKY,EACLL,SAAQ,SAEd,CAACb,IACIc,EDfqBK,CAAanB,GAA7BU,EADuB,EAC5BJ,KAAYO,EADgB,EAChBA,QAEnB,OACI,qCACA,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAS,mBAAGjB,UAAU,mCAAb,wBACV,qBAAKA,UAAU,YAAf,SACSc,EAAOF,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIhB,aEVhB2B,EAAe,WAAO,IAAD,EAEGzC,mBAAS,CAAC,cAFb,mBAEvB0C,EAFuB,KAEZ3C,EAFY,KAQ9B,OACI,gCACI,gDACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACC2C,EAAWb,KAAI,SAACR,GAAD,OAAc,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCbxDsB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.277be4c6.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types';\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(\"\")\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value);\n    }\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n        //Ya que no recibi las categorias\n        //El setCategories se puede llamar por medio de un callback\n        //que trae el estado anterior\n        setCategories(cats=>[inputValue,...cats]);\n        setInputValue('');\n        }\n        \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            />\n        </form>\n    )\n}\nAddCategory.propTypes={\n    setCategories:PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs=async(category)=>{\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=w6Hg6qdA6Ia1EsP8RqOZSoPQXPOAW51r`\n    const resp=await fetch(url);\n    const {data}=await resp.json();\n    const gifs=data.map(img=>{\n        return{\n            id:img.id,\n            title:img.title,\n            url:img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport {useFetchGifs} from '../hooks/useFetchGifs';\nexport const GifGrid = ({category}) => {\n    const {data:images,loading}=useFetchGifs(category);\n        \n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        {loading&&<p className=\"animate__animated animate__flash\">Loading...</p>}\n        <div className=\"card-grid\">\n                {images.map(img=>(\n                    <GifGridItem \n                    key={img.id} \n                    {...img}/>\n                    // La expresion de arriba es equivalente a img={img}\n                    // y Puede ser recibida con desestructuracion en el componente hijo\n                    //o por medio de las props\n                ))}\n        </div>\n    </>\n    )\n}\n","import {useState,useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\nexport const useFetchGifs=(category)=>{\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    })\n    //Use efect recibe un callback que es la funciona a ejecutar\n    //y un arreglo de dependencias que como su nombre lo indica\n    //si esta vacio solo se ejecutara una vez pero si depende de otras\n    //variables deberiamos de colocar las variables ahi y \n    //se ejecutara cada vez que cambien dichas variables\n    useEffect(()=>{\n        getGifs(category)\n        .then(imgs=>setstate({\n            data:imgs,\n            loading:false\n        }));\n    },[category])\n    return state;\n}","import React,{useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport {GifGrid} from \"./components/GifGrid\"; \nexport const GifExpertApp = () => {\n    \n    const [categories,setCategories]=useState(['One Punch']);\n    \n    // const handleAdd=()=>{\n    //     setCategories([...categories,'HunterXHunter']);\n    //     //setCategories(cats=>[...cats,'HunterXHunter']);\n    // }\n    return (\n        <div>\n            <h2>Gif Expert App</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories}/>\n            <ol>\n            {categories.map((category)=> (<GifGrid key={category} category={category}/>))}\n            </ol>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./GifExpertApp\";\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}